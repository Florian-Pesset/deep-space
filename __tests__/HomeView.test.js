import { Box, Heading, Text } from "@chakra-ui/react";
import { render, fireEvent } from "@testing-library/react";
import { useRouter } from "next/router";
import HomeView from "../pages/HomeView";

describe("HomeView", () => {
  it("sets the page title correctly", () => {
    const { getByText } = render(<HomeView />);
    expect(getByText("Space")).toBeInTheDocument();
  });

  it("sets the correct meta description", () => {
    const { getByTestId } = render(<HomeView />);
    expect(getByTestId("description").getAttribute("content")).toBe(
      "Generated by create next app"
    );
  });

  it("sets the correct favicon link", () => {
    const { getByTestId } = render(<HomeView />);
    expect(getByTestId("favicon").getAttribute("href")).toBe("/favicon.ico");
  });

  it("sets the correct Box styles based on screen size", () => {
    const { getByTestId } = render(<HomeView />);
    expect(getByTestId("box").style).toHaveProperty("display", "flex");
    expect(getByTestId("box").style).toHaveProperty("flexDirection", "column");
    expect(getByTestId("box").style).toHaveProperty("gap", "20px");
  });

  it("sets the correct Text color", () => {
    const { getByTestId } = render(<HomeView />);
    expect(getByTestId("text").style).toHaveProperty("color", "primary");
  });

  it("sets the correct Heading styles", () => {
    const { getByTestId } = render(<HomeView />);
    expect(getByTestId("heading").style).toHaveProperty("color", "black");
    expect(getByTestId("heading").style).toHaveProperty("fontSize", "60px");
  });

  it("sets the correct hover styles on the button Box", () => {
    const { getByTestId } = render(<HomeView />);
    expect(getByTestId("button").style).toHaveProperty(
      "transition",
      " 1s ease"
    );
    expect(getByTestId("button").style).toHaveProperty(
      "transitionProperty",
      "revert"
    );
    expect(getByTestId("button").style).toHaveProperty(
      "border",
      "25px solid grey !important"
    );
  });

  it("calls router.push with the correct argument when the button is clicked", () => {
    const mockPush = jest.fn();
    jest.spyOn(useRouter(), "push").mockImplementation(mockPush);
    const { getByTestId } = render(<HomeView />);
    fireEvent.click(getByTestId("button"));
    expect(mockPush).toHaveBeenCalledWith("/destination");
  });
});
